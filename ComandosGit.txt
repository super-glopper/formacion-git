git init                                                         -- Empezar repositorio en tu local
 
git add nombreArchivo                                            --  Arranca  al archivo
 
git commit -m "version 1"                                        -- Añade comentarios a lo que vamos a subir
 
git add .                                                                        -- Añadimos archivo modificado
 
git commit -m "cambio realizado"
git commit -am "comentario" (add + commit)
 
git status                                                                       -- Estado del repositorio
 
git show archivo                                                                        -- Cambios historicos
 
history                                                                         -- muestra historial cmds
 
checkout                                                                        -- Traer del repo a local
 
git rm archivo                                                          -- quitar del add (queda sin trackear)
 
git config --global user.name "Alberto GL"                                                     
 
git config --global user.email "alber6155@gmail.com"   
 
git log archivo                                                         -- Con  codigo de seguimiento


-- Para comparar dos versiones (num de version de git show archivo)
git diff 64118443e75d3fa0b0402474b29b44b494c891d6 59724553cb76fa701ffbf4aa792242fa6d0f5e6b

-- Volver version anterior
git reset 64118443e75d3fa0b0402474b29b44b494c891d6 --hard/--soft

git branch              -- ver en que rama estamos

git checkout cabecera   -- cambiar de rama

git merge cabecera (siempre merge desde master)     --fusionar dos ramas

CONFLICTOS!!
Desde Visualcode podemos arreglarlo, luego hacemos commit para terminar de guardarlo
>>>>>>HEAD (lo que tenemos en master)
<<<<<<<<INCOMING CHANGE (el cambio que le estamos haciendo)

git remote add origin https://github.com/super-glopper/formacion-git.git     -- para traernos un nuevo origen de github

git remote -v       --- para ver los urigenes http que tenemos

git push origin master -- llevar cambios a github

git pull origin master --allow-unralated-histories para fusionar comits de local con los de github

Tags y versiones en Git y GitHub
git log --all --graph --decorate --oneline = muestra el historias de repositorio peor decorando y comprimiendo todo
alias NOMBRE_DEL_ALIAS = “AQUI VA TODO EL CODIGO DE GIT”
git tag -a nombre-del-tag id-del-commit. = Crear un nuevo tag y asignarlo a un commit.
git tag -d nombre-del-tag = Borrar un tag en el repositorio local.
git tag o git show-refs --tags = Listar los tags de nuestro repositorio local.
git push origin --tags = Publicar un tag en el repositorio remoto.
git tag -d NOMBRE_DEL_TAG = Ellmina el tag de manera local
git push origin :refs/tags/nombre-del-tag = Borrar un tag del repositorio remoto.